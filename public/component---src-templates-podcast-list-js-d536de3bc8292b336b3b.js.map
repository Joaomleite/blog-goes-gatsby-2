{"version":3,"sources":["webpack:///./src/components/HeaderPodcast/styled.js","webpack:///./src/components/HeaderPodcast/index.js","webpack:///./src/templates/podcast-list.js"],"names":["HeaderSection","styled","section","media","lessThan","Img","img","link","Link","WrapperItens","div","Title","h1","Tag","h2","HeaderPodcast","listBanner","useStaticQuery","allMarkdownRemark","edges","Carousel","interval","map","node","Item","to","fields","slug","frontmatter","category","title","src","image","childImageSharp","fluid","query","BlogList","props","listPosts","data","postIndex","length","pageContext","currentPage","numPages","isFirst","isLast","prevPage","nextPage","showPagination","console","log","PostList","date","Pagination"],"mappings":"2jBAIO,IAAMA,EAAgBC,IAAOC,QAAV,4EAAGD,CAAH,oGAOtBE,IAAMC,SAAS,SAAfD,CAPsB,MAYbE,EAAMJ,IAAOK,IAAV,kEAAGL,CAAH,8BAKHM,EAAON,YAAOO,QAAV,mEAAGP,CAAH,MAEJQ,EAAeR,IAAOS,IAAV,2EAAGT,CAAH,mFAQZU,EAAQV,IAAOW,GAAV,oEAAGX,CAAH,+EAMdE,IAAMC,SAAS,SAAfD,CANc,MAYLU,EAAMZ,IAAOa,GAAV,kEAAGb,CAAH,wLAWZE,IAAMC,SAAS,SAAfD,CAXY,M,YCYDY,EAhDO,WAAO,IA2BrBC,EAzBsBC,yBAAe,cAApCC,kBAyB8BC,MAErC,OACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,SAAU,KACjBL,EAAWM,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OACd,kBAACH,EAAA,EAASI,KAAV,KACE,kBAAC,EAAD,CAAQC,GAAIF,EAAKG,OAAOC,MACtB,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAQJ,EAAKK,YAAYC,UACzB,kBAAC,EAAD,KAAUN,EAAKK,YAAYE,QAE7B,kBAAC,EAAD,CAAOC,IAAKR,EAAKK,YAAYI,MAAMC,gBAAgBC,MAAMH,c,gDCO1DI,EAAK,YA8BHC,UAtEE,SAACC,GAEhB,IAAMC,EAAYD,EAAME,KAAKrB,kBAAkBC,MACzCqB,EAAYH,EAAME,KAAKrB,kBAAkBC,MAAMsB,OAH3B,EAKMJ,EAAMK,YAA/BC,EALmB,EAKnBA,YAAaC,EALM,EAKNA,SAEdC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,WAAxB,kBAAsDA,EAAc,GAC/EK,EAAQ,kBAAoBL,EAAc,GAE1CM,EAAiBT,EAAY,EAGnC,OADAU,QAAQC,IAAIX,GAEV,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKV,MAAM,SACVe,GAAW,kBAAC,EAAD,MACXA,GAAW,kBAAC,IAAD,2BACVA,GAAW,kBAAC,IAAD,+BACX,kBAACO,EAAA,EAAD,KACGd,EAAUhB,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OACX,kBAAC,IAAD,CACEjB,IAAKiB,EAAKK,YAAYI,MAAMC,gBAAgBC,MAAMH,IAClDxB,KAAMgB,EAAKG,OAAOC,KAClBE,SAAUN,EAAKK,YAAYC,SAC3BwB,KAAM9B,EAAKK,YAAYyB,KACvBvB,MAAOP,EAAKK,YAAYE,YAKjCe,GAAWI,GAAkB,kBAACK,EAAA,EAAD,CAAYT,QAASA,EAASC,OAAQA,EAAQH,YAAaA,EAAaC,SAAUA,EAAUG,SAAUA,EAAUC,SAAUA","file":"component---src-templates-podcast-list-js-d536de3bc8292b336b3b.js","sourcesContent":["import styled from 'styled-components'\nimport {Link} from 'gatsby'\nimport media from \"styled-media-query\"\n\nexport const HeaderSection = styled.section`\n  max-width: 1250px;\n  margin: 0 auto;\n  border-radius: 60px;\n  margin-top: 5rem;\n  overflow: hidden;\n  z-index:1;\n  ${media.lessThan(\"medium\")`\n    border-radius: 0px;\n    margin-top: 1rem;\n  `}\n`\nexport const Img = styled.img`\n  width: 100%;\n  height: 500px;\n`\n\nexport const link = styled(Link)`\n`\nexport const WrapperItens = styled.div`\n  position: absolute;\n  bottom: 3rem;\n  left: 1.4rem;\n  display: flex;\n  flex-direction: column;\n\n`\nexport const Title = styled.h1`\n  bottom: 2.5rem;\n  left: 1.5rem;\n  font-size: 2.7rem;\n  color: #fff;\n  font-weight: bold;\n  ${media.lessThan(\"medium\")`\n    font-size: 2rem; \n  `}\n  \n`\n\nexport const Tag = styled.h2`\n  align-self: flex-start;\n  display: block;\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 1.0rem;\n  margin-bottom: 1rem;\n  color: #fff;\n  border: 1px solid #bddaf0;\n  text-align: center;\n  font-size: 1.6rem; \n  ${media.lessThan(\"medium\")`\n    padding: 0.7rem;\n    font-size: 1.5rem; \n  `}\n  \n`","import React from 'react'\nimport {useStaticQuery, graphql} from 'gatsby'\n\nimport * as S from './styled'\nimport {Carousel} from 'react-bootstrap'\n\n\nconst HeaderPodcast = () => {\n\n  const {allMarkdownRemark} = useStaticQuery(graphql`\n    query BannerPodcastList {\n      allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, filter: {frontmatter: {category: {eq: \"Podcast\"}}}, limit: 3) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              category\n              date(locale: \"pt-br\", formatString: \"DD [ de ] MMMM [de] YYYY\")\n              title\n              image {\n                childImageSharp {\n                  fluid(maxHeight: 720, maxWidth: 1280, quality: 100) {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }`)\n\n  const listBanner = allMarkdownRemark.edges\n    \n  return(\n    <S.HeaderSection>\n      <Carousel interval={6000} >\n        {listBanner.map(({node}) => (\n          <Carousel.Item>\n            <S.link to={node.fields.slug}>\n              <S.WrapperItens>\n                <S.Tag>{node.frontmatter.category}</S.Tag>\n                <S.Title>{node.frontmatter.title}</S.Title>\n              </S.WrapperItens>\n              <S.Img src={node.frontmatter.image.childImageSharp.fluid.src}></S.Img>\n            </S.link>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </S.HeaderSection>\n    )\n}\n\nexport default HeaderPodcast","import React from 'react'\nimport {useStaticQuery ,graphql} from 'gatsby'\n\nimport * as S from '../components/BlogList/styled'\n\nimport Layout from \"../components/layout/index\"\nimport HeaderPodcast from '../components/HeaderPodcast'\nimport PostList from '../components/PostList'\nimport PostCard from '../components/postCard'\nimport Pagination from '../components/Pagination'\n\nimport SEO from \"../components/seo\"\n\nconst BlogList = (props) => {\n\n  const listPosts = props.data.allMarkdownRemark.edges\n  const postIndex = props.data.allMarkdownRemark.edges.length\n\n  const {currentPage, numPages} = props.pageContext\n\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '/podcast' : `/podcast/page/${currentPage - 1}`\n  const nextPage = `/podcast/page/${currentPage + 1}`\n\n  const showPagination = postIndex > 5 ? true : false\n\n  console.log(postIndex)\n  return(\n    <>\n      <Layout>\n        <SEO title=\"Home\" />\n        {isFirst && <HeaderPodcast/>}\n        {isFirst && <S.PostBegining>Ãšltimos Podcasts:</S.PostBegining>}\n        {!isFirst && <S.PostEnding>Podcasts mais antigos:</S.PostEnding>}\n          <PostList>\n            {listPosts.map(({node}) => (\n                <PostCard\n                  img={node.frontmatter.image.childImageSharp.fluid.src}\n                  link={node.fields.slug}\n                  category={node.frontmatter.category}\n                  date={node.frontmatter.date}\n                  title={node.frontmatter.title}\n                />\n              )\n            )}  \n          </PostList>\n        {isFirst && showPagination && <Pagination isFirst={isFirst} isLast={isLast} currentPage={currentPage} numPages={numPages} prevPage={prevPage} nextPage={nextPage} />}\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query ListPodcastPost($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, , filter: {frontmatter: {category: {eq: \"Podcast\"}}}\n    limit: $limit\n    skip: $skip\n    ){\n      edges {\n        node {\n          fields{\n            slug \n          }\n          frontmatter {\n            category\n            date(locale: \"pt-br\", formatString: \"DD [ de ] MMMM [de] YYYY\")\n            title\n            image {\n            childImageSharp {\n              fluid(maxHeight: 250, maxWidth: 400, quality: 100) {\n                ...GatsbyImageSharpFluid\n                src\n              }\n            }\n          }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogList"],"sourceRoot":""}